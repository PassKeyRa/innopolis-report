version: '3.3'
services:
  postgres:
    restart: always
    build: ./postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:?error}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?error}
      - POSTGRES_USER=${POSTGRES_USER:?error}
    volumes:
      - "postgres:/var/lib/postgresql/data"
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  math:
    build: ./generator
    environment:
      - POSTGRES_DB=${POSTGRES_DB:?error}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?error}
      - POSTGRES_USER=${POSTGRES_USER:?error}
      - POSTGRES_HOST=${POSTGRES_HOST:?error}
      - POSTGRES_PORT=${POSTGRES_PORT:?error}
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
  polis-report:
    build: ./client-report
    restart: always
    ports:
      - '5010:5010'
    depends_on:
      postgres:
        condition: service_healthy
      math:
        condition: service_started
  frontend:
    build: ./InnoPolis-frontend/inno-polis-frontend
    ports:
      - '3000:3000'
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - math
      - polis-report

volumes:
    postgres: {}
